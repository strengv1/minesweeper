{"ast":null,"code":"var _jsxFileName = \"/home/ville/miinaharava/src/App.js\";\nimport './styles.css';\n// import { useState } from 'react'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Square = ({\n  handleClick,\n  id,\n  idx\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"square hidden\",\n  idName: id,\n  onClick: handleClick\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n_c = Square;\nconst Grid = ({\n  grid,\n  width,\n  handleClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    style: {\n      gridTemplateColumns: `repeat(${width}, auto)`\n    },\n    children: grid.map(square => /*#__PURE__*/_jsxDEV(Square, {\n      handleClick: handleClick,\n      id: square.id,\n      idx: square.index\n    }, square.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Grid;\nconst generateGrid = (width, height) => {\n  let grid = [];\n  for (let i = 0; i < height; ++i) {\n    for (let j = 0; j < width; ++j) {\n      let id = `${i}_${j}`;\n      let idx = i * width + j;\n      grid.push({\n        id: id,\n        index: idx\n      });\n    }\n  }\n  return grid;\n};\nconst randInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min)) + min;\n};\nconst generateMineField = (minesCount, gridLen) => {\n  if (minesCount > gridLen) {\n    console.log('Too many mines!');\n    return -1;\n  }\n  let mineField = new Array(gridLen).fill(false);\n  let mineIndexes = [];\n  while (mineIndexes.length < minesCount) {\n    const randomNumber = randInt(0, gridLen);\n    if (!mineIndexes.includes(randomNumber)) {\n      mineIndexes.push(randomNumber);\n    }\n  }\n  mineIndexes.forEach(idx => mineField[idx] = true);\n  return mineField;\n};\nfunction App() {\n  const width = 3;\n  const height = 4;\n  const minesCount = 3;\n  const mineField = generateMineField(minesCount, width * height);\n  const handleClick = event => {\n    event.preventDefault();\n    console.log('target:', event.target);\n    var sq = event.target;\n    var element = document.getElementsByClassName(sq.id)[0];\n    if (mineField[sq.idx]) {\n      //end game\n      element.classList.remove('hidden');\n      element.classList.add('mine');\n    } else {\n      // reveal number / empty\n      element.classList.remove('hidden');\n      element.classList.add('open');\n    }\n  };\n  const grid = generateGrid(width, height);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Miinaharava\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      grid: grid,\n      width: width,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Fragment","_Fragment","Square","handleClick","id","idx","className","idName","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Grid","grid","width","style","gridTemplateColumns","children","map","square","index","_c2","generateGrid","height","i","j","push","randInt","min","max","Math","floor","random","generateMineField","minesCount","gridLen","console","log","mineField","Array","fill","mineIndexes","length","randomNumber","includes","forEach","App","event","preventDefault","target","sq","element","document","getElementsByClassName","classList","remove","add","_c3","$RefreshReg$"],"sources":["/home/ville/miinaharava/src/App.js"],"sourcesContent":["import './styles.css'\n// import { useState } from 'react'\n\nconst Square = ({handleClick, id, idx}) => ( \n  <div className={\"square hidden\"} \n      idName={id}\n      onClick={handleClick} /> \n)\n\nconst Grid = ({ grid, width, handleClick }) => {\n  return (\n    <div className=\"grid\" style={{gridTemplateColumns: `repeat(${width}, auto)`}}>\n      {grid.map( square => \n        <Square key={square.id} handleClick={ handleClick } id={square.id} idx={square.index} />\n      )}\n    </div>\n  )\n}\n\nconst generateGrid = (width, height) => {\n  let grid = []\n\n  for (let i = 0; i < height; ++i){\n    for (let j = 0; j < width; ++j) {\n      let id = `${i}_${j}`\n      let idx = i*width + j\n      grid.push({\n        id: id,\n        index: idx\n      })\n    }\n  }\n  return grid\n}\nconst randInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\nconst generateMineField = (minesCount, gridLen) => {\n  if ( minesCount > gridLen ) {\n    console.log('Too many mines!')\n    return -1\n  }\n  let mineField = new Array(gridLen).fill(false)\n  let mineIndexes = []\n  while (mineIndexes.length < minesCount) {\n    const randomNumber = randInt(0, gridLen)\n    if (!mineIndexes.includes(randomNumber)) {\n      mineIndexes.push(randomNumber)\n    }\n  }\n  mineIndexes.forEach((idx) => mineField[idx] = true)\n  return mineField\n}\n\nfunction App() {\n  const width = 3\n  const height = 4\n  const minesCount = 3\n\n  const mineField = generateMineField(minesCount, width*height)\n\n  const handleClick = (event) => {\n    event.preventDefault()\n    console.log('target:', event.target)  \n    var sq = event.target\n    var element = document.getElementsByClassName(sq.id)[0]\n  \n    if (mineField[sq.idx]) {\n      //end game\n      element.classList.remove('hidden')\n      element.classList.add('mine')\n    } else {\n      // reveal number / empty\n      element.classList.remove('hidden')\n      element.classList.add('open')\n    }\n  }\n  const grid = generateGrid(width, height)\n\n  return (\n    <>\n      <div className=\"header\">\n        <h1>Miinaharava</h1>\n      </div>\n\n      <Grid grid={grid} width={width} handleClick={handleClick}/>\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}