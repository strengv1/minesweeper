{"ast":null,"code":"var _jsxFileName = \"/home/ville/miinaharava/src/App.js\",\n  _s = $RefreshSig$();\nimport './styles.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst gridForm = ({\n  name,\n  number,\n  id,\n  removePerson\n}) => {\n  return (\n    /*#__PURE__*/\n    // Woah, the key attribute does NOT have to be added to the div?\n    // or addressed in any way here.. \n    _jsxDEV(\"div\", {\n      children: [name, \" \", number, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        id: name,\n        onClick: () => removePerson(id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)\n  );\n};\nconst generateGrid = (width, height, mines, reveal) => {\n  let grid = [];\n  for (let i = 0; i < height; ++i) {\n    for (let j = 0; j < width; ++j) {\n      let id = `${i}_${j}`;\n      grid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"square \" + id,\n        onClick: () => reveal(id)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this));\n    }\n  }\n  return grid;\n};\nfunction App() {\n  _s();\n  const [width, setWidth] = useState(3);\n  const [height, setHeight] = useState(3);\n  const mines = 1;\n  const reveal = id => {\n    console.log(id === \"2_0\");\n  };\n  const grid = generateGrid(width, height, mines, reveal);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Miinaharava\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      style: {\n        gridTemplateColumns: `repeat(${width}, auto)`\n      },\n      children: grid.map(square => square)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ittWy5iqUQYhqEHv7Uu8M6JHqTQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","gridForm","name","number","id","removePerson","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","generateGrid","width","height","mines","reveal","grid","i","j","push","className","App","_s","setWidth","setHeight","console","log","style","gridTemplateColumns","map","square","_c","$RefreshReg$"],"sources":["/home/ville/miinaharava/src/App.js"],"sourcesContent":["import './styles.css'\nimport { useState } from 'react'\n\nconst gridForm = ({name, number, id, removePerson}) => {\n  return (\n  // Woah, the key attribute does NOT have to be added to the div?\n  // or addressed in any way here.. \n    <div> \n      {name} {number} <button id={name} onClick={() => removePerson(id)}>Delete</button>\n    </div>\n  )\n}\n\nconst generateGrid = (width, height, mines, reveal) => {\n  let grid = []\n\n  for (let i = 0; i < height; ++i){\n    for (let j = 0; j < width; ++j) {\n      let id = `${i}_${j}`\n      grid.push(<div key={id} className={\"square \"+id} onClick={() => reveal(id)}></div>)\n    }\n  }\n\n  return grid\n}\n\nfunction App() {\n  const [width, setWidth] = useState(3)\n  const [height, setHeight] = useState(3)\n  const mines = 1\n\n  const reveal = id => {\n    console.log(id === \"2_0\")\n  }\n\n  const grid = generateGrid(width, height, mines, reveal)\n  \n\n  return (\n    <>\n      <h1>Miinaharava</h1>\n      <div className=\"grid\" style={{gridTemplateColumns: `repeat(${width}, auto)`}}>\n        \n        { grid.map((square) => square) }\n\n      </div>\n  \n\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAC;EAACC,IAAI;EAAEC,MAAM;EAAEC,EAAE;EAAEC;AAAY,CAAC,KAAK;EACrD;IAAA;IACA;IACA;IACEP,OAAA;MAAAQ,QAAA,GACGJ,IAAI,EAAC,GAAC,EAACC,MAAM,EAAC,GAAC,eAAAL,OAAA;QAAQM,EAAE,EAAEF,IAAK;QAACK,OAAO,EAAEA,CAAA,KAAMF,YAAY,CAACD,EAAE,CAAE;QAAAE,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E;EAAC;AAEV,CAAC;AAED,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,KAAK;EACrD,IAAIC,IAAI,GAAG,EAAE;EAEb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,EAAE,EAAEI,CAAC,EAAC;IAC9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,KAAK,EAAE,EAAEM,CAAC,EAAE;MAC9B,IAAIf,EAAE,GAAI,GAAEc,CAAE,IAAGC,CAAE,EAAC;MACpBF,IAAI,CAACG,IAAI,eAACtB,OAAA;QAAcuB,SAAS,EAAE,SAAS,GAACjB,EAAG;QAACG,OAAO,EAAEA,CAAA,KAAMS,MAAM,CAACZ,EAAE;MAAE,GAAvDA,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2D,CAAC,CAAC;IACrF;EACF;EAEA,OAAOM,IAAI;AACb,CAAC;AAED,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACV,KAAK,EAAEW,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACkB,MAAM,EAAEW,SAAS,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAMmB,KAAK,GAAG,CAAC;EAEf,MAAMC,MAAM,GAAGZ,EAAE,IAAI;IACnBsB,OAAO,CAACC,GAAG,CAACvB,EAAE,KAAK,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMa,IAAI,GAAGL,YAAY,CAACC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,CAAC;EAGvD,oBACElB,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBb,OAAA;MAAKuB,SAAS,EAAC,MAAM;MAACO,KAAK,EAAE;QAACC,mBAAmB,EAAG,UAAShB,KAAM;MAAQ,CAAE;MAAAP,QAAA,EAEzEW,IAAI,CAACa,GAAG,CAAEC,MAAM,IAAKA,MAAM;IAAC;MAAAvB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3B,CAAC;EAAA,eAIN,CAAC;AAEP;AAACY,EAAA,CAzBQD,GAAG;AAAAU,EAAA,GAAHV,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}