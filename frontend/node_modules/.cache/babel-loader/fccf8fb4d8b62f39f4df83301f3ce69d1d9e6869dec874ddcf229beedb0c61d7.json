{"ast":null,"code":"var _jsxFileName = \"/home/ville/miinaharava/src/App.js\",\n  _s = $RefreshSig$();\nimport './styles.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Square = ({\n  handleClick,\n  id,\n  idx\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"square hidden \" + id,\n  onClick: () => handleClick(idx, id)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n_c = Square;\nconst Grid = ({\n  grid,\n  width\n}) => {\n  console.log('grid[9]', grid[9]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    style: {\n      gridTemplateColumns: `repeat(${width}, auto)`\n    },\n    children: grid.map(square => /*#__PURE__*/_jsxDEV(Square, {\n      handleClick: square.handleClick,\n      id: square.id,\n      idx: square.index\n    }, square.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Grid;\nconst generateGrid = (width, height, handleClick) => {\n  let grid = [];\n  for (let i = 0; i < height; ++i) {\n    for (let j = 0; j < width; ++j) {\n      let id = `${i}_${j}`;\n      let idx = i * width + j;\n      grid.push({\n        id: id,\n        index: idx,\n        handleClick: handleClick\n      });\n    }\n  }\n  return grid;\n};\nconst randInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min)) + min;\n};\nconst generateMineField = (minesCount, gridLen) => {\n  if (minesCount > gridLen) {\n    console.log('Too many mines!');\n    return -1;\n  }\n  let mineField = new Array(gridLen).fill(false);\n  let mineIndexes = [];\n  while (mineIndexes.length < minesCount) {\n    const randomNumber = randInt(0, gridLen);\n    if (!mineIndexes.includes(randomNumber)) {\n      mineIndexes.push(randomNumber);\n    }\n  }\n  mineIndexes.forEach(idx => mineField[idx] = true);\n  return mineField;\n};\nfunction App() {\n  _s();\n  const [width] = useState(3); // setWidth\n  const [height] = useState(4); // setHeight\n  const minesCount = 3;\n  const mineField = generateMineField(minesCount, width * height);\n  const handleClick = (idx, id) => {\n    var element = document.getElementsByClassName(id);\n    console.log('id:', id, 'idx', idx);\n    // if (mineField[idx]) {\n    //   //end game\n    //   element.classList.remove('hidden')\n    //   element.classList.add('mine')\n    // } else {\n    //   // reveal number / empty\n    //   element.classList.remove('hidden')\n    //   element.classList.add('open')\n    // }\n  };\n\n  const grid = generateGrid(width, height, handleClick);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Miinaharava\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      grid: grid,\n      width: width\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"fvV4ajy/cm+EWeOfWgCjH+H9I8o=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","handleClick","id","idx","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Grid","grid","width","console","log","style","gridTemplateColumns","children","map","square","index","_c2","generateGrid","height","i","j","push","randInt","min","max","Math","floor","random","generateMineField","minesCount","gridLen","mineField","Array","fill","mineIndexes","length","randomNumber","includes","forEach","App","_s","element","document","getElementsByClassName","_c3","$RefreshReg$"],"sources":["/home/ville/miinaharava/src/App.js"],"sourcesContent":["import './styles.css'\nimport { useState } from 'react'\n\nconst Square = ({handleClick, id, idx}) => ( \n  <div className={\"square hidden \" + id} onClick={() => handleClick(idx, id)} /> \n)\n\nconst Grid = ({ grid, width }) => {\n  console.log('grid[9]', grid[9])\n  return (\n    <div className=\"grid\" style={{gridTemplateColumns: `repeat(${width}, auto)`}}>\n      {grid.map( square => \n        <Square key={square.id} handleClick={ square.handleClick } id={square.id} idx={square.index} />\n      )}\n    </div>\n  )\n}\n\nconst generateGrid = (width, height, handleClick) => {\n  let grid = []\n\n  for (let i = 0; i < height; ++i){\n    for (let j = 0; j < width; ++j) {\n      let id = `${i}_${j}`\n      let idx = i*width + j\n      grid.push({\n        id: id,\n        index: idx,\n        handleClick: handleClick\n      })\n    }\n  }\n  return grid\n}\nconst randInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\nconst generateMineField = (minesCount, gridLen) => {\n  if ( minesCount > gridLen ) {\n    console.log('Too many mines!')\n    return -1\n  }\n  let mineField = new Array(gridLen).fill(false)\n  let mineIndexes = []\n  while (mineIndexes.length < minesCount) {\n    const randomNumber = randInt(0, gridLen)\n    if (!mineIndexes.includes(randomNumber)) {\n      mineIndexes.push(randomNumber)\n    }\n  }\n  mineIndexes.forEach((idx) => mineField[idx] = true)\n  return mineField\n}\n\nfunction App() {\n  const [width] = useState(3)   // setWidth\n  const [height] = useState(4)  // setHeight\n  const minesCount = 3\n\n  const mineField = generateMineField(minesCount, width*height)\n  \n  const handleClick = (idx, id) => {\n    var element = document.getElementsByClassName(id)\n    console.log('id:', id, 'idx', idx)\n    // if (mineField[idx]) {\n    //   //end game\n    //   element.classList.remove('hidden')\n    //   element.classList.add('mine')\n    // } else {\n    //   // reveal number / empty\n    //   element.classList.remove('hidden')\n    //   element.classList.add('open')\n    // }\n  }\n  const grid = generateGrid(width, height, handleClick)\n\n  return (\n    <>\n      <div className=\"header\">\n        <h1>Miinaharava</h1>\n      </div>\n\n \n      <Grid grid={grid} width={width}/>\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}