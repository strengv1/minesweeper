{"ast":null,"code":"var _jsxFileName = \"/home/ville/miinaharava/src/App.js\",\n  _s = $RefreshSig$();\nimport './styles.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Square = ({\n  handleClick,\n  id,\n  idx\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"square hidden \" + id,\n  onClick: () => handleClick(idx, id)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n_c = Square;\nconst Grid = ({\n  grid\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Square, {\n      handleClick: handleClick,\n      id: id,\n      idx: idx\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c2 = Grid;\nconst generateGrid = (width, height, handleClick) => {\n  let grid = [];\n  for (let i = 0; i < height; ++i) {\n    for (let j = 0; j < width; ++j) {\n      let id = `${i}_${j}`;\n      let idx = i * width + j;\n      grid.push({\n        id: id,\n        i\n      });\n    }\n  }\n  return grid;\n};\nconst randInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min)) + min;\n};\nconst generateMineField = (minesCount, gridLen) => {\n  if (minesCount > gridLen) {\n    console.log('Too many mines!');\n    return -1;\n  }\n  let mineField = new Array(gridLen).fill(false);\n  let mineIndexes = [];\n  while (mineIndexes.length < minesCount) {\n    const randomNumber = randInt(0, gridLen);\n    if (!mineIndexes.includes(randomNumber)) {\n      mineIndexes.push(randomNumber);\n    }\n  }\n  mineIndexes.forEach(idx => mineField[idx] = true);\n  return mineField;\n};\nfunction App() {\n  _s();\n  const [width] = useState(3); // setWidth\n  const [height] = useState(4); // setHeight\n  const minesCount = 3;\n  const mineField = generateMineField(minesCount, width * height);\n  const handleClick = (idx, id) => {\n    var element = document.getElementsByClassName(id);\n    console.log('element.classList', element.classList);\n    // if (mineField[idx]) {\n    //   //end game\n    //   element.classList.remove('hidden')\n    //   element.classList.add('mine')\n    // } else {\n    //   // reveal number / empty\n    //   element.classList.remove('hidden')\n    //   element.classList.add('open')\n    // }\n  };\n\n  const grid = generateGrid(width, height, handleClick);\n  console.log('grid:', grid);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Miinaharava\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      style: {\n        gridTemplateColumns: `repeat(${width}, auto)`\n      },\n      children: grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      style: {\n        gridTemplateColumns: `repeat(${width}, auto)`\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        grid: grid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"fvV4ajy/cm+EWeOfWgCjH+H9I8o=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","handleClick","id","idx","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Grid","grid","children","_c2","generateGrid","width","height","i","j","push","randInt","min","max","Math","floor","random","generateMineField","minesCount","gridLen","console","log","mineField","Array","fill","mineIndexes","length","randomNumber","includes","forEach","App","_s","element","document","getElementsByClassName","classList","style","gridTemplateColumns","_c3","$RefreshReg$"],"sources":["/home/ville/miinaharava/src/App.js"],"sourcesContent":["import './styles.css'\nimport { useState } from 'react'\n\nconst Square = ({handleClick, id, idx}) => ( \n  <div className={\"square hidden \" + id} onClick={() => handleClick(idx, id)} /> \n)\n\nconst Grid = ({ grid }) => {\n  return (\n    <>\n      { <Square key={id} handleClick={ handleClick } id={id} idx={idx} /> }\n    </>\n  )\n}\n\nconst generateGrid = (width, height, handleClick) => {\n  let grid = []\n\n  for (let i = 0; i < height; ++i){\n    for (let j = 0; j < width; ++j) {\n      let id = `${i}_${j}`\n      let idx = i*width + j\n      grid.push({\n        id: id,\n        i\n      })\n    }\n  }\n  return grid\n}\n\nconst randInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\nconst generateMineField = (minesCount, gridLen) => {\n  if ( minesCount > gridLen ) {\n    console.log('Too many mines!')\n    return -1\n  }\n  let mineField = new Array(gridLen).fill(false)\n  let mineIndexes = []\n  while (mineIndexes.length < minesCount) {\n    const randomNumber = randInt(0, gridLen)\n    if (!mineIndexes.includes(randomNumber)) {\n      mineIndexes.push(randomNumber)\n    }\n  }\n  mineIndexes.forEach((idx) => mineField[idx] = true)\n  return mineField\n}\n\nfunction App() {\n  const [width] = useState(3)   // setWidth\n  const [height] = useState(4)  // setHeight\n  const minesCount = 3\n\n  const mineField = generateMineField(minesCount, width*height)\n  \n  const handleClick = (idx, id) => {\n    var element = document.getElementsByClassName(id)\n    console.log('element.classList', element.classList)\n    // if (mineField[idx]) {\n    //   //end game\n    //   element.classList.remove('hidden')\n    //   element.classList.add('mine')\n    // } else {\n    //   // reveal number / empty\n    //   element.classList.remove('hidden')\n    //   element.classList.add('open')\n    // }\n  }\n  const grid = generateGrid(width, height, handleClick)\n  console.log('grid:', grid)\n\n  return (\n    <>\n      <div className=\"header\">\n        <h1>Miinaharava</h1>\n      </div>\n\n      <div className=\"grid\" style={{gridTemplateColumns: `repeat(${width}, auto)`}}>\n        { grid }\n      </div>\n      <div className=\"grid\" style={{gridTemplateColumns: `repeat(${width}, auto)`}}>\n        <Grid grid={grid}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}