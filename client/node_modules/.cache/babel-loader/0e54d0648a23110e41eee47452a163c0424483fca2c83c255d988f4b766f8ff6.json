{"ast":null,"code":"var _jsxFileName = \"/home/ville/miinaharava/src/App.js\";\nimport './styles.css';\n// import { useState } from 'react'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Square = ({\n  handleClick,\n  id\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"square hidden\",\n  id: id,\n  onClick: handleClick,\n  onContextMenu: handleClick\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n_c = Square;\nconst Grid = ({\n  grid,\n  width,\n  handleClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    style: {\n      gridTemplateColumns: `repeat(${width}, auto)`\n    },\n    children: grid.map(square => /*#__PURE__*/_jsxDEV(Square, {\n      handleClick: handleClick,\n      id: square.id\n    }, square.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Grid;\nconst generateGrid = (width, height) => {\n  let grid = [];\n  for (let i = 0; i < height; ++i) {\n    for (let j = 0; j < width; ++j) {\n      let id = `${i}_${j}`;\n      grid.push({\n        id: id\n      });\n    }\n  }\n  return grid;\n};\nconst randInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min)) + min;\n};\nconst generateMineField = (minesCount, gridLen) => {\n  if (minesCount > gridLen) {\n    console.log('Too many mines!');\n    return -1;\n  }\n  let mineField = new Array(gridLen).fill(false);\n  let mineIndexes = [];\n  while (mineIndexes.length < minesCount) {\n    const randomNumber = randInt(0, gridLen);\n    if (!mineIndexes.includes(randomNumber)) {\n      mineIndexes.push(randomNumber);\n    }\n  }\n  mineIndexes.forEach(idx => mineField[idx] = true);\n  return mineField;\n};\nconst indexFromId = id => {\n  const parts = id.split('_');\n  return parseInt(parts[0]) * 3 + parseInt(parts[1]);\n  // i*width + j\n};\n\nfunction App() {\n  const width = 7;\n  const height = 8;\n  const minesCount = 3;\n  const mineField = generateMineField(minesCount, width * height);\n  const handleClick = e => {\n    e.preventDefault();\n    const checkForMine = () => {\n      if (mineField[idx]) {\n        //end game\n        classList.add('mine');\n      } else {\n        // reveal number / empty\n        classList.add('open');\n      }\n    };\n    var square = e.target;\n    var classList = square.classList;\n    var idx = indexFromId(square.id);\n    switch (true) {\n      // LEFT CLICK:\n      case e.type === 'click' && classList.contains('hidden'):\n        classList.remove('hidden');\n        checkForMine();\n        break;\n      case e.type === 'click' && classList.contains('flag'):\n        break;\n      case e.type === 'click' && classList.contains('mine'):\n        break;\n      case e.type === 'click' && classList.contains('open'):\n        break;\n      // RIGHT CLICK:\n      case e.type === 'contextmenu' && classList.contains('hidden'):\n        classList.remove('hidden');\n        classList.add('flag');\n        break;\n      case e.type === 'contextmenu' && classList.contains('flag'):\n        classList.remove('flag');\n        classList.add('hidden');\n        break;\n      case e.type === 'contextmenu' && classList.contains('mine'):\n        break;\n      case e.type === 'contextmenu' && classList.contains('open'):\n        break;\n      default:\n        console.log('dunno what u pressed lol');\n    }\n  };\n  const grid = generateGrid(width, height);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Miinaharava\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      grid: grid,\n      width: width,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Fragment","_Fragment","Square","handleClick","id","className","onClick","onContextMenu","fileName","_jsxFileName","lineNumber","columnNumber","_c","Grid","grid","width","style","gridTemplateColumns","children","map","square","_c2","generateGrid","height","i","j","push","randInt","min","max","Math","floor","random","generateMineField","minesCount","gridLen","console","log","mineField","Array","fill","mineIndexes","length","randomNumber","includes","forEach","idx","indexFromId","parts","split","parseInt","App","e","preventDefault","checkForMine","classList","add","target","type","contains","remove","_c3","$RefreshReg$"],"sources":["/home/ville/miinaharava/src/App.js"],"sourcesContent":["import './styles.css'\n// import { useState } from 'react'\n\nconst Square = ({handleClick, id}) => ( \n  <div className={\"square hidden\"} \n      id={id}\n      onClick={handleClick} \n      onContextMenu={handleClick}/> \n)\n\nconst Grid = ({ grid, width, handleClick }) => {\n  return (\n    <div className=\"grid\" style={{gridTemplateColumns: `repeat(${width}, auto)`}}>\n      {grid.map( square => \n        <Square key={square.id} handleClick={ handleClick } id={square.id} />\n      )}\n    </div>\n  )\n}\n\nconst generateGrid = (width, height) => {\n  let grid = []\n\n  for (let i = 0; i < height; ++i){\n    for (let j = 0; j < width; ++j) {\n      let id = `${i}_${j}`\n      grid.push({\n        id: id\n      })\n    }\n  }\n  return grid\n}\nconst randInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\nconst generateMineField = (minesCount, gridLen) => {\n  if ( minesCount > gridLen ) {\n    console.log('Too many mines!')\n    return -1\n  }\n  let mineField = new Array(gridLen).fill(false)\n  let mineIndexes = []\n  while (mineIndexes.length < minesCount) {\n    const randomNumber = randInt(0, gridLen)\n    if (!mineIndexes.includes(randomNumber)) {\n      mineIndexes.push(randomNumber)\n    }\n  }\n  mineIndexes.forEach((idx) => mineField[idx] = true)\n  return mineField\n}\n\nconst indexFromId = id => {\n  const parts = id.split('_')\n  return parseInt(parts[0])*3 + parseInt(parts[1])\n  // i*width + j\n}\n\nfunction App() {\n  const width = 7\n  const height = 8\n  const minesCount = 3\n\n  const mineField = generateMineField(minesCount, width*height)\n\n  const handleClick = (e) => {\n    e.preventDefault()\n    \n    const checkForMine = () => {\n      if (mineField[idx]) {\n        //end game\n        classList.add('mine')\n      } else {\n        // reveal number / empty\n        classList.add('open')\n      }\n    }\n    \n    var square = e.target\n    var classList = square.classList\n    var idx = indexFromId(square.id)\n\n    switch (true){\n      // LEFT CLICK:\n      case ((e.type === 'click') && classList.contains('hidden')):\n        classList.remove('hidden')\n        checkForMine()\n        break\n      case ((e.type ==='click') && classList.contains('flag')):\n        break\n      case ((e.type ==='click') && classList.contains('mine')):\n        break\n      case ((e.type ==='click') && classList.contains('open')):\n        break\n      // RIGHT CLICK:\n      case ((e.type === 'contextmenu') && classList.contains('hidden')):\n        classList.remove('hidden')\n        classList.add('flag')\n        break\n      case ((e.type ==='contextmenu') && classList.contains('flag')):\n        classList.remove('flag')\n        classList.add('hidden')  \n        break\n      case ((e.type ==='contextmenu') && classList.contains('mine')):\n        break\n      case ((e.type ==='contextmenu') && classList.contains('open')):\n        break\n      default:\n        console.log('dunno what u pressed lol')\n    }\n\n  }\n  const grid = generateGrid(width, height)\n\n  return (\n    <>\n      <div className=\"header\">\n        <h1>Miinaharava</h1>\n      </div>\n\n      <Grid grid={grid} width={width} handleClick={handleClick}/>\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}